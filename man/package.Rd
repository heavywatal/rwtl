% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/package.R
\name{lib_upgrade}
\alias{lib_upgrade}
\alias{old_packages}
\alias{install_packages}
\title{Package management utilities}
\usage{
lib_upgrade(..., binary = TRUE, ask = interactive())

old_packages(..., binary = TRUE)

install_packages(pkg, lib = .libPaths()[[1L]], ..., binary = TRUE)
}
\arguments{
\item{...}{Passed to \code{\link[utils:update.packages]{utils::old.packages()}} or \code{\link[pak:pkg_install]{pak::pkg_install()}}.}

\item{binary}{A logical. Set \code{FALSE} to accept source packages.}

\item{ask}{Whether to ask for confirmation when installing a different
version of a package that is already installed. Installations that only
add new packages never require confirmation.}

\item{pkg}{Package names or package references. E.g.
\itemize{
\item \code{ggplot2}: package from CRAN, Bioconductor or a CRAN-like repository
in general,
\item \code{tidyverse/ggplot2}: package from GitHub,
\item \code{tidyverse/ggplot2@v3.4.0}: package from GitHub tag or branch,
\item \verb{https://examples.com/.../ggplot2_3.3.6.tar.gz}: package from URL,
\item \code{.}: package in the current working directory.
}

See "\link[pak]{Package sources}" for more details.}

\item{lib}{Package library to install the packages to. Note that \emph{all}
dependent packages will be installed here, even if they are
already installed in another library. The only exceptions are base
and recommended packages installed in \code{.Library}. These are not
duplicated in \code{lib}, unless a newer version of a recommended package
is needed.}
}
\description{
\code{lib_upgrade()} is a stopgap until \code{pak::lib_upgrade()} \url{https://github.com/r-lib/pak/issues/168}.
There is no direct way to enforce binary for now: \url{https://github.com/r-lib/pak/issues/318}.
\code{pak::pkg_upgrade()} is not available yet: \url{https://github.com/r-lib/pak/pull/289}.
Versioned CRAN packages are not implemented yet \url{https://github.com/r-lib/pkgdepends/blob/main/R/type-cran.R}.

\code{old_packages()} is a thin wrapper of \code{\link[utils:update.packages]{utils::old.packages()}}.

\code{install_packages()} is a thin wrapper of \code{\link[pak:pkg_install]{pak::pkg_install()}}
to temporarily force binary installation.
}
