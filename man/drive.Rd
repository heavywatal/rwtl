% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/drive.R
\name{gs4_read_sheet}
\alias{gs4_read_sheet}
\alias{gs4_auth_json}
\title{Read spreadsheet from cloud drives}
\usage{
gs4_read_sheet(..., path = NULL, email = gargle::gargle_oauth_email())

gs4_auth_json(path = NULL, email = gargle::gargle_oauth_email())
}
\arguments{
\item{...}{
  Arguments passed on to \code{\link[googlesheets4:range_read]{googlesheets4::read_sheet}}
  \describe{
    \item{\code{ss}}{Something that identifies a Google Sheet:
\itemize{
\item its file id as a string or \code{\link[googledrive:drive_id]{drive_id}}
\item a URL from which we can recover the id
\item a one-row \code{\link[googledrive:dribble]{dribble}}, which is how googledrive
represents Drive files
\item an instance of \code{googlesheets4_spreadsheet}, which is what \code{\link[googlesheets4:gs4_get]{gs4_get()}}
returns
}

Processed through \code{\link[googlesheets4:as_sheets_id]{as_sheets_id()}}.}
    \item{\code{sheet}}{Sheet to read, in the sense of "worksheet" or "tab". You can identify a sheet by name, with a string, or by position, with a number. Ignored if the sheet is specified via \code{range}. If neither argument specifies the sheet, defaults to the first visible sheet.}
    \item{\code{range}}{A cell range to read from. If \code{NULL}, all non-empty cells are
read. Otherwise specify \code{range} as described in \href{https://developers.google.com/sheets/api/guides/concepts#a1_notation}{Sheets A1 notation}
or using the helpers documented in \link[googlesheets4]{cell-specification}. Sheets uses
fairly standard spreadsheet range notation, although a bit different from
Excel. Examples of valid ranges: \code{"Sheet1!A1:B2"}, \code{"Sheet1!A:A"},
\code{"Sheet1!1:2"}, \code{"Sheet1!A5:A"}, \code{"A1:B2"}, \code{"Sheet1"}. Interpreted
strictly, even if the range forces the inclusion of leading, trailing, or
embedded empty rows or columns. Takes precedence over \code{skip}, \code{n_max} and
\code{sheet}. Note \code{range} can be a named range, like \code{"sales_data"}, without
any cell reference.}
    \item{\code{col_names}}{\code{TRUE} to use the first row as column names, \code{FALSE} to get
default names, or a character vector to provide column names directly. If
user provides \code{col_types}, \code{col_names} can have one entry per column or one
entry per unskipped column.}
    \item{\code{col_types}}{Column types. Either \code{NULL} to guess all from the
spreadsheet or a string of readr-style shortcodes, with one character or
code per column. If exactly one \code{col_type} is specified, it is recycled.
See Column Specification for more.}
    \item{\code{na}}{Character vector of strings to interpret as missing values. By
default, blank cells are treated as missing data.}
    \item{\code{trim_ws}}{Logical. Should leading and trailing whitespace be trimmed
from cell contents?}
    \item{\code{skip}}{Minimum number of rows to skip before reading anything, be it
column names or data. Leading empty rows are automatically skipped, so this
is a lower bound. Ignored if \code{range} is given.}
    \item{\code{n_max}}{Maximum number of data rows to parse into the returned tibble.
Trailing empty rows are automatically skipped, so this is an upper bound on
the number of rows in the result. Ignored if \code{range} is given. \code{n_max} is
imposed locally, after reading all non-empty cells, so, if speed is an
issue, it is better to use \code{range}.}
    \item{\code{guess_max}}{Maximum number of data rows to use for guessing column
types.}
    \item{\code{.name_repair}}{Handling of column names. By default, googlesheets4
ensures column names are not empty and are unique. There is full support
for \code{.name_repair} as documented in \code{\link[tibble:tibble]{tibble::tibble()}}.}
  }}

\item{path}{Credentials JSON downloaded from "Google Cloud Console".
Passed to \code{\link[googledrive:drive_auth_configure]{googledrive::drive_auth_configure()}}.}

\item{email}{An address or a glob pattern like \code{"*@tohoku.ac.jp"}.
\code{TRUE} to allow auto-discovery from cache.
Passed to \code{\link[googledrive:drive_auth]{googledrive::drive_auth()}}}
}
\description{
Read spreadsheet from cloud drives
}
