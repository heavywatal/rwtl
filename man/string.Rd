% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/string.R
\name{split_chr}
\alias{split_chr}
\alias{rsplit}
\alias{ord}
\alias{chr}
\alias{as_chr}
\alias{as_code}
\title{String utility}
\usage{
split_chr(string, pattern = "\\\\s+", n = Inf)

rsplit(string, pattern = "\\\\s+", n = 42L)

ord(char)

chr(i)

as_chr(...)

as_code(x)
}
\arguments{
\item{string}{Input vector. Either a character vector, or something
coercible to one.}

\item{pattern}{Pattern to look for.

The default interpretation is a regular expression, as described
in \link[stringi:stringi-search-regex]{stringi::stringi-search-regex}. Control options with
\code{\link[stringr:regex]{regex()}}.

Match a fixed string (i.e. by comparing only bytes), using
\code{\link[stringr:fixed]{fixed()}}. This is fast, but approximate. Generally,
for matching human text, you'll want \code{\link[stringr:coll]{coll()}} which
respects character matching rules for the specified locale.

Match character, word, line and sentence boundaries with
\code{\link[stringr:boundary]{boundary()}}. An empty pattern, "", is equivalent to
\code{boundary("character")}.}

\item{n}{number of pieces to return.  Default (Inf) uses all
possible split positions.

For \code{str_split_fixed}, if n is greater than the number of pieces,
the result will be padded with empty strings.}

\item{char}{character}

\item{i}{integer}

\item{...}{expressions}

\item{x}{vector}
}
\description{
\code{split_chr} splits a string and return a flattened vector.
}
\details{
\code{rsplit} splits a string from right.

\code{ord} is a pythonic alias of \code{charToRaw()}.

\code{chr} is a pythonic alias of \code{intToUtf8()}.

\code{as_chr} converts expr into character vector.

\code{as_code} converts a vector into R code that generates it.
}
