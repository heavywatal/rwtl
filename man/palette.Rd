% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/palette.R
\name{scale_colour_gradientb}
\alias{scale_colour_gradientb}
\alias{scale_fill_gradientb}
\title{Colour palette for ggplot2}
\usage{
scale_colour_gradientb(palette, n = 5L, direction = 1, ...)

scale_fill_gradientb(palette, n = 5L, direction = 1, ...)
}
\arguments{
\item{palette}{If a string, will use that named palette.  If a number, will
index into the list of palettes of appropriate \code{type}}

\item{n}{Number of colors in the palette.}

\item{direction}{Sets the order of colours in the scale. If 1, the default,
colours are as output by \code{\link[RColorBrewer:brewer.pal]{RColorBrewer::brewer.pal()}}. If -1, the
order of colours is reversed.}

\item{...}{Arguments passed on to \code{continuous_scale}
\describe{
  \item{scale_name}{The name of the scale}
  \item{palette}{A palette function that when called with a numeric vector with
values between 0 and 1 returns the corresponding values in the range the
scale maps to.}
  \item{name}{The name of the scale. Used as the axis or legend title. If
\code{waiver()}, the default, the name of the scale is taken from the first
mapping used for that aesthetic. If \code{NULL}, the legend title will be
omitted.}
  \item{breaks}{One of:
\itemize{
\item \code{NULL} for no breaks
\item \code{waiver()} for the default breaks computed by the
transformation object
\item A numeric vector of positions
\item A function that takes the limits as input and returns breaks
as output
}}
  \item{minor_breaks}{One of:
\itemize{
\item \code{NULL} for no minor breaks
\item \code{waiver()} for the default breaks (one minor break between
each major break)
\item A numeric vector of positions
\item A function that given the limits returns a vector of minor breaks.
}}
  \item{labels}{One of:
\itemize{
\item \code{NULL} for no labels
\item \code{waiver()} for the default labels computed by the
transformation object
\item A character vector giving labels (must be same length as \code{breaks})
\item A function that takes the breaks as input and returns labels
as output
}}
  \item{limits}{A numeric vector of length two providing limits of the scale.
Use \code{NA} to refer to the existing minimum or maximum.}
  \item{rescaler}{Used by diverging and n colour gradients
(i.e. \code{\link[=scale_colour_gradient2]{scale_colour_gradient2()}}, \code{\link[=scale_colour_gradientn]{scale_colour_gradientn()}}).
A function used to scale the input values to the range [0, 1].}
  \item{oob}{Function that handles limits outside of the scale limits
(out of bounds). The default replaces out of bounds values with \code{NA}.}
  \item{trans}{Either the name of a transformation object, or the
object itself. Built-in transformations include "asn", "atanh",
"boxcox", "exp", "identity", "log", "log10", "log1p", "log2",
"logit", "probability", "probit", "reciprocal", "reverse" and "sqrt".

A transformation object bundles together a transform, its inverse,
and methods for generating breaks and labels. Transformation objects
are defined in the scales package, and are called \code{name_trans}, e.g.
\code{\link[scales:boxcox_trans]{scales::boxcox_trans()}}. You can create your own
transformation with \code{\link[scales:trans_new]{scales::trans_new()}}.}
  \item{position}{The position of the axis. "left" or "right" for vertical
scales, "top" or "bottom" for horizontal scales}
  \item{super}{The super class to use for the constructed scale}
  \item{expand}{Vector of range expansion constants used to add some
padding around the data, to ensure that they are placed some distance
away from the axes. Use the convenience function \code{\link[=expand_scale]{expand_scale()}}
to generate the values for the \code{expand} argument. The defaults are to
expand the scale by 5\% on each side for continuous variables, and by
0.6 units on each side for discrete variables.}
}}
}
\description{
Colour palette for ggplot2
}
\details{
\code{scale_colour_gradientb} is a shortcut of
\code{scale_colour_gradientn(colours = scales::brewer_pal(...))}

\code{scale_fill_gradientb} is a shortcut of
\code{scale_fill_gradientn(colours = scales::brewer_pal(...))}
}
\examples{
ggplot2::ggplot(mtcars, ggplot2::aes(disp, mpg, colour = hp, fill = wt)) +
  ggplot2::geom_point(pch = 22, size = 4, stroke = 2) +
  scale_colour_gradientb("RdYlGn", direction = -1) +
  scale_fill_gradientb("Blues", direction = -1)
}
